networks:
  traefik:
    external: true
services:
  orbitgs:
    build: ./orbitgs
    restart: unless-stopped
    # ports:
    #   - 80:80 # Port of service
    networks:
    - traefik # add to traefik network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.orbitgs.rule=Host(`${DOCS_HOST}`) && PathPrefix(`/orbitgs/`)"
      - "traefik.http.routers.orbitgs.entrypoints=websecure"
      - "traefik.http.routers.orbitgs.middlewares=authentik@file"

  mainpage:
    build: ./mainpage
    restart: unless-stopped
    # ports:
    #   - 80:80 # Port of service
    networks:
    - traefik # add to traefik network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mainpage.rule=Host(`${DOCS_HOST}`) && PathPrefix(`/`)"
      - "traefik.http.routers.mainpage.entrypoints=websecure"
      - "traefik.http.routers.mainpage.middlewares=authentik@file"
      # redirect on any other path to the /mainpage
      - "traefik.http.routers.docs.rule=Host(`${DOCS_HOST}`)"
      - "traefik.http.routers.docs.entrypoints=websecure"
      - "traefik.http.routers.docs.middlewares=authentik@file,docs-redirect"
      - "traefik.http.routers.docs.service=noop@internal"
      - "traefik.http.middlewares.docs-redirect.redirectregex.regex=^https?://[^/]+/(.*)"
      - "traefik.http.middlewares.docs-redirect.redirectregex.replacement=https://${DOCS_HOST}/"
